NEW_FILE_NAME = ['UNIVERSITY_LINKS_AT_DEPTH_%s.json' % d for d in range(MAX_DEPTH+1)]

# Create file name for each depth level
self.new_files_path = [self.return_file_path(data_file_name=self.NEW_FILE_NAME[d]) \
                       for d in range(len(self.NEW_FILE_NAME))]
self.file_exist = {}

# Iterate through file names and dump using json
for new_file_path in self.new_files_path:
    self.file_exist[new_file_path] = os.path.isfile(new_file_path)
    if self.file_exist[new_file_path]:
        os.remove(new_file_path)
    with open(new_file_path, mode='w') as f:
            json.dump({}, f, indent=2)
# Create entry and yield it
entry = {
    url_redirected: {
        'Page Title': page_title,
        'Non-repetitive Anchor Link': href_text_dict,
        'School Name': response.meta['school_name'],
        'Initial Url': response.meta['initial_url']
    }
}
feeds = json.load(open(self.new_files_path[depth]))
feeds.update(entry)

# Deal with file reading permission error
try:
    with open(self.new_files_path[depth], mode='w') as f:
        json.dump(feeds, f, indent=2)
except PermissionError:
    self.log_info('PermissionError when visiting %s and yield request again' % url_redirected)
    yield response.request